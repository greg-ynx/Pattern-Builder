# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
#
# Some modifications made to this generated class by lyl-Lynx.

import sys

from src.app.ui.TableView.UiTableViewForm import UiTableViewForm
from src.app.ui.AboutForm.UiAboutForm import UiAboutForm
import webbrowser
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QStandardItem, QColor
from PyQt5.QtWidgets import QPushButton


class UiMainWindow(object):

    def __init__(self, main_window):

        main_window.setObjectName("main_window")
        main_window.resize(850, 670)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(main_window.sizePolicy().hasHeightForWidth())
        main_window.setSizePolicy(size_policy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("../../../assets/img/pattern_builder_icon.ico"), QtGui.QIcon.Normal,
                       QtGui.QIcon.Off)
        main_window.setWindowIcon(icon)
        self.main_window = main_window

        self.help_pattern_builder_widget = QtWidgets.QWidget()
        self.help_pattern_builder_form = UiAboutForm(self.help_pattern_builder_widget,
                                                     "Pattern builder help",
                                                     "../../../assets/img/QuestionMark.png",
                                                     "../../../assets/txt/help_pattern_builder.txt")

        self.about_pattern_builder_widget = QtWidgets.QWidget()
        self.about_pattern_builder_form = UiAboutForm(self.about_pattern_builder_widget,
                                                      "About Pattern Builder",
                                                      "../../../assets/img/pattern_builder_logo_c_800px.png",
                                                      "../../../assets/txt/about_pattern_builder.txt")

        self.about_lyl_lynx_widget = QtWidgets.QWidget()
        self.about_lyl_lynx_form = UiAboutForm(self.about_lyl_lynx_widget,
                                               "About lyl-Lynx",
                                               "../../../assets/img/lyl8Lynx_logo.png",
                                               "../../../assets/txt/about_lyl_lynx.txt")

        self.colors_widget = QtWidgets.QWidget()
        self.table_view_form = UiTableViewForm(self.colors_widget)
        self.table_view_form.close_button.clicked.connect(self.update_colors_select)

        self.main_widget = QtWidgets.QWidget(main_window)
        self.main_widget.setObjectName("main_widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.main_widget)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.main_toolBox_layout = QtWidgets.QGridLayout()
        self.main_toolBox_layout.setObjectName("main_toolBox_layout")
        self.toolBox_frame = QtWidgets.QFrame(self.main_widget)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.toolBox_frame.sizePolicy().hasHeightForWidth())
        self.toolBox_frame.setSizePolicy(size_policy)
        self.toolBox_frame.setMinimumSize(QtCore.QSize(163, 609))
        self.toolBox_frame.setBaseSize(QtCore.QSize(163, 609))
        self.toolBox_frame.setFrameShape(QtWidgets.QFrame.Box)
        self.toolBox_frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.toolBox_frame.setObjectName("toolBox_frame")

        self.verticalLayout = QtWidgets.QVBoxLayout(self.toolBox_frame)
        self.verticalLayout.setObjectName("verticalLayout")

        self.toolBox_title = QtWidgets.QLabel(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.toolBox_title.sizePolicy().hasHeightForWidth())
        self.toolBox_title.setSizePolicy(size_policy)
        self.toolBox_title.setMinimumSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.toolBox_title.setFont(font)
        self.toolBox_title.setAutoFillBackground(False)
        self.toolBox_title.setStyleSheet("background-color: rgb(217, 217, 217);")
        self.toolBox_title.setFrameShape(QtWidgets.QFrame.Panel)
        self.toolBox_title.setFrameShadow(QtWidgets.QFrame.Raised)
        self.toolBox_title.setAlignment(QtCore.Qt.AlignCenter)
        self.toolBox_title.setObjectName("toolBox_title")
        self.verticalLayout.addWidget(self.toolBox_title)

        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem)
        self.toolBox_sizes_title = QtWidgets.QLabel(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.toolBox_sizes_title.sizePolicy().hasHeightForWidth())
        self.toolBox_sizes_title.setSizePolicy(size_policy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.toolBox_sizes_title.setFont(font)
        self.toolBox_sizes_title.setAlignment(QtCore.Qt.AlignCenter)
        self.toolBox_sizes_title.setObjectName("toolBox_sizes_title")
        self.verticalLayout.addWidget(self.toolBox_sizes_title)

        self.toolBox_vertical_layout = QtWidgets.QVBoxLayout()
        self.toolBox_vertical_layout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.toolBox_vertical_layout.setObjectName("toolBox_vertical_layout")
        self.wxh_label_horizontal_layout = QtWidgets.QHBoxLayout()
        self.wxh_label_horizontal_layout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.wxh_label_horizontal_layout.setObjectName("wxh_label_horizontal_layout")

        self.width_label = QtWidgets.QLabel(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.width_label.sizePolicy().hasHeightForWidth())
        self.width_label.setSizePolicy(size_policy)
        self.width_label.setAlignment(QtCore.Qt.AlignCenter)
        self.width_label.setObjectName("width_label")
        self.wxh_label_horizontal_layout.addWidget(self.width_label)

        self.height_label = QtWidgets.QLabel(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.height_label.sizePolicy().hasHeightForWidth())
        self.height_label.setSizePolicy(size_policy)
        self.height_label.setAlignment(QtCore.Qt.AlignCenter)
        self.height_label.setObjectName("height_label")
        self.wxh_label_horizontal_layout.addWidget(self.height_label)

        self.toolBox_vertical_layout.addLayout(self.wxh_label_horizontal_layout)

        self.wxh_spinBox_horizontal_layout = QtWidgets.QHBoxLayout()
        self.wxh_spinBox_horizontal_layout.setObjectName("wxh_spinBox_horizontal_layout")

        self.width_spinBox = QtWidgets.QSpinBox(self.toolBox_frame)
        self.width_spinBox.setMinimum(1)
        self.width_spinBox.setMaximum(16)
        self.width_spinBox.setProperty("value", 3)
        self.width_spinBox.setObjectName("width_spinBox")
        self.width_spinBox.valueChanged.connect(self.on_change_size)
        self.wxh_spinBox_horizontal_layout.addWidget(self.width_spinBox)

        self.height_spinBox = QtWidgets.QSpinBox(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.height_spinBox.sizePolicy().hasHeightForWidth())
        self.height_spinBox.setSizePolicy(size_policy)
        self.height_spinBox.setMinimum(1)
        self.height_spinBox.setMaximum(16)
        self.height_spinBox.setProperty("value", 3)
        self.height_spinBox.setObjectName("height_spinBox")
        self.height_spinBox.valueChanged.connect(self.on_change_size)
        self.wxh_spinBox_horizontal_layout.addWidget(self.height_spinBox)

        self.toolBox_vertical_layout.addLayout(self.wxh_spinBox_horizontal_layout)

        self.verticalLayout.addLayout(self.toolBox_vertical_layout)

        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem1)

        self.toolBox_line_1 = QtWidgets.QFrame(self.toolBox_frame)
        self.toolBox_line_1.setFrameShape(QtWidgets.QFrame.HLine)
        self.toolBox_line_1.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.toolBox_line_1.setObjectName("toolBox_line_1")
        self.verticalLayout.addWidget(self.toolBox_line_1)

        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem2)

        self.toolBox_colors_title = QtWidgets.QLabel(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.toolBox_colors_title.sizePolicy().hasHeightForWidth())
        self.toolBox_colors_title.setSizePolicy(size_policy)
        font = QtGui.QFont()
        font.setPointSize(10)
        self.toolBox_colors_title.setFont(font)
        self.toolBox_colors_title.setAlignment(QtCore.Qt.AlignCenter)
        self.toolBox_colors_title.setObjectName("toolBox_colors_title")
        self.verticalLayout.addWidget(self.toolBox_colors_title)

        self.colors_comboBox = QtWidgets.QComboBox(self.toolBox_frame)
        self.colors_comboBox.setMaxVisibleItems(16)
        model = self.colors_comboBox.model()
        self.colors_comboBox.setObjectName("colors_comboBox")
        initial_items = self.table_view_form.get_all()
        for item in initial_items:
            c_item = QStandardItem()
            c_item.setText(str(item['id']))
            c_item.setBackground(QColor(item['Hex']))
            model.appendRow(c_item)
        self.selected_color_id = int(self.colors_comboBox.currentText())
        self.verticalLayout.addWidget(self.colors_comboBox)

        self.colors_table_button = QtWidgets.QPushButton(self.toolBox_frame)
        self.colors_table_button.setObjectName("colors_table_button")
        self.colors_table_button.clicked.connect(self.colors_widget.show)
        self.verticalLayout.addWidget(self.colors_table_button)

        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem3)

        self.toolBox_line_2 = QtWidgets.QFrame(self.toolBox_frame)
        self.toolBox_line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.toolBox_line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.toolBox_line_2.setObjectName("toolBox_line_2")
        self.verticalLayout.addWidget(self.toolBox_line_2)

        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem4)

        self.reset_button_horizontal_layout = QtWidgets.QHBoxLayout()
        self.reset_button_horizontal_layout.setObjectName("reset_button_horizontal_layout")
        spacerItem5 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.reset_button_horizontal_layout.addItem(spacerItem5)

        self.reset_button = QtWidgets.QPushButton(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.reset_button.sizePolicy().hasHeightForWidth())
        self.reset_button.setSizePolicy(size_policy)
        self.reset_button.setObjectName("reset_button")
        self.reset_button.clicked.connect(self.reset_matrix)
        self.reset_button_horizontal_layout.addWidget(self.reset_button)

        spacerItem6 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.reset_button_horizontal_layout.addItem(spacerItem6)

        self.verticalLayout.addLayout(self.reset_button_horizontal_layout)

        self.export_button_horizontal_layout = QtWidgets.QHBoxLayout()
        self.export_button_horizontal_layout.setObjectName("export_button_horizontal_layout")

        spacerItem9 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.export_button_horizontal_layout.addItem(spacerItem9)

        self.export_button = QtWidgets.QPushButton(self.toolBox_frame)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.export_button.sizePolicy().hasHeightForWidth())
        self.export_button.setSizePolicy(size_policy)
        self.export_button.setObjectName("export_button")
        self.export_button_horizontal_layout.addWidget(self.export_button)

        spacerItem10 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.export_button_horizontal_layout.addItem(spacerItem10)

        self.verticalLayout.addLayout(self.export_button_horizontal_layout)

        spacerItem11 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        self.verticalLayout.addItem(spacerItem11)

        self.main_toolBox_layout.addWidget(self.toolBox_frame, 0, 0, 1, 1)

        self.horizontalLayout.addLayout(self.main_toolBox_layout)

        self.main_pattern_layout = QtWidgets.QGridLayout()
        self.main_pattern_layout.setObjectName("main_pattern_layout")

        self.pattern_frame = QtWidgets.QFrame(self.main_widget)
        size_policy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        size_policy.setHorizontalStretch(0)
        size_policy.setVerticalStretch(0)
        size_policy.setHeightForWidth(self.pattern_frame.sizePolicy().hasHeightForWidth())
        self.pattern_frame.setSizePolicy(size_policy)
        self.pattern_frame.setMinimumSize(QtCore.QSize(659, 609))
        self.pattern_frame.setBaseSize(QtCore.QSize(659, 609))
        self.pattern_frame.setFrameShape(QtWidgets.QFrame.Box)
        self.pattern_frame.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.pattern_frame.setObjectName("pattern_frame")

        self.gridLayout = QtWidgets.QGridLayout(self.pattern_frame)
        self.gridLayout.setObjectName("gridLayout")

        for row in range(self.get_height()):
            for column in range(self.get_width()):
                item = QPushButton()
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
                sizePolicy.setHeightForWidth(item.sizePolicy().hasHeightForWidth())
                item.setSizePolicy(sizePolicy)
                item.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                item.setObjectName("button{}{}".format(row, column))
                item.setText("0")
                item.setStyleSheet("background-color : #FF0000")
                item.clicked.connect(self.switch_button_color)
                self.gridLayout.addWidget(item, row, column)

        self.main_pattern_layout.addWidget(self.pattern_frame, 0, 0, 1, 1)

        self.horizontalLayout.addLayout(self.main_pattern_layout)

        main_window.setCentralWidget(self.main_widget)

        self.menubar = QtWidgets.QMenuBar(main_window)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 850, 21))
        self.menubar.setObjectName("menubar")

        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")

        self.menu_export_as = QtWidgets.QMenu(self.menu_file)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("../../../assets/img/Export.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_export_as.setIcon(icon1)
        self.menu_export_as.setObjectName("menu_export_as")

        self.menu_matrix = QtWidgets.QMenu(self.menu_export_as)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("../../../assets/img/matrix.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.menu_matrix.setIcon(icon2)
        self.menu_matrix.setObjectName("menu_matrix")

        self.menu_pattern = QtWidgets.QMenu(self.menu_export_as)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("../../../assets/img/pattern_builder_logo_c_800px.png"), QtGui.QIcon.Normal,
                        QtGui.QIcon.Off)
        self.menu_pattern.setIcon(icon3)
        self.menu_pattern.setObjectName("menu_pattern")

        self.menu_help = QtWidgets.QMenu(self.menubar)
        self.menu_help.setObjectName("menu_help")

        main_window.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(main_window)
        self.statusbar.setObjectName("statusbar")
        main_window.setStatusBar(self.statusbar)

        self.action_matrix_text_file_txt = QtWidgets.QAction(main_window)
        self.action_matrix_text_file_txt.setObjectName("action_matrix_text_file_txt")

        self.action_matrix_json = QtWidgets.QAction(main_window)
        self.action_matrix_json.setObjectName("action_matrix_json")

        self.action_matrix_tabler_csv = QtWidgets.QAction(main_window)
        self.action_matrix_tabler_csv.setObjectName("action_matrix_tabler_csv")

        self.action_matrix_tabler_xls = QtWidgets.QAction(main_window)
        self.action_matrix_tabler_xls.setObjectName("action_matrix_tabler_xls")

        self.action_matrix_tabler_xlsx = QtWidgets.QAction(main_window)
        self.action_matrix_tabler_xlsx.setObjectName("action_matrix_tabler_xlsx")

        self.action_matrix_image_jpeg = QtWidgets.QAction(main_window)
        self.action_matrix_image_jpeg.setObjectName("action_matrix_image")

        self.action_matrix_image_jpg = QtWidgets.QAction(main_window)
        self.action_matrix_image_jpg.setObjectName("action_matrix_image_jpg")

        self.action_matrix_image_wout_bg_png = QtWidgets.QAction(main_window)
        self.action_matrix_image_wout_bg_png.setObjectName("action_matrix_image_wout_bg_png")

        self.action_matrix_image_white_bg_png = QtWidgets.QAction(main_window)
        self.action_matrix_image_white_bg_png.setObjectName("action_matrix_image_white_bg_png")

        self.action_matrix_vector_svg = QtWidgets.QAction(main_window)
        self.action_matrix_vector_svg.setObjectName("action_matrix_vector_svg")

        self.action_matrix_pdf = QtWidgets.QAction(main_window)
        self.action_matrix_pdf.setObjectName("action_matrix_pdf")

        self.action_pattern_image_jpeg = QtWidgets.QAction(main_window)
        self.action_pattern_image_jpeg.setObjectName("action_pattern_image_jpeg")

        self.action_pattern_image_jpg = QtWidgets.QAction(main_window)
        self.action_pattern_image_jpg.setObjectName("action_pattern_image_jpg")

        self.action_pattern_wout_bg_png = QtWidgets.QAction(main_window)
        self.action_pattern_wout_bg_png.setObjectName("action_pattern_wout_bg_png")

        self.action_pattern_white_bg_png = QtWidgets.QAction(main_window)
        self.action_pattern_white_bg_png.setObjectName("action_pattern_white_bg_png")

        self.action_pattern_vector = QtWidgets.QAction(main_window)
        self.action_pattern_vector.setObjectName("action_pattern_vector")

        self.action_pattern_pdf = QtWidgets.QAction(main_window)
        self.action_pattern_pdf.setObjectName("action_pattern_pdf")

        self.action_help = QtWidgets.QAction(main_window)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("../../../assets/img/QuestionMark.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_help.setIcon(icon8)
        self.action_help.setObjectName("action_help")
        self.action_help.triggered.connect(self.help_pattern_builder_widget.show)

        self.action_about_pb = QtWidgets.QAction(main_window)
        self.action_about_pb.setIcon(icon3)
        self.action_about_pb.setObjectName("action_about_pb")
        self.action_about_pb.triggered.connect(self.about_pattern_builder_widget.show)

        self.action_about_author = QtWidgets.QAction(main_window)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("../../../assets/img/lyl8Lynx_logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_about_author.setIcon(icon9)
        self.action_about_author.setObjectName("action_about_author")
        self.action_about_author.triggered.connect(self.about_lyl_lynx_widget.show)

        self.action_join_us = QtWidgets.QAction(main_window)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("../../../assets/img/GitHub.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_join_us.setIcon(icon10)
        self.action_join_us.setObjectName("action_join_us")
        self.action_join_us.triggered.connect(self.redirect_to_github_repo)

        self.menu_matrix.addAction(self.action_matrix_text_file_txt)
        self.menu_matrix.addAction(self.action_matrix_json)
        self.menu_matrix.addSeparator()
        self.menu_matrix.addAction(self.action_matrix_tabler_csv)
        self.menu_matrix.addAction(self.action_matrix_tabler_xls)
        self.menu_matrix.addAction(self.action_matrix_tabler_xlsx)
        self.menu_matrix.addSeparator()
        self.menu_matrix.addAction(self.action_matrix_image_jpeg)
        self.menu_matrix.addAction(self.action_matrix_image_jpg)
        self.menu_matrix.addAction(self.action_matrix_image_wout_bg_png)
        self.menu_matrix.addAction(self.action_matrix_image_white_bg_png)
        self.menu_matrix.addAction(self.action_matrix_vector_svg)
        self.menu_matrix.addAction(self.action_matrix_pdf)
        self.menu_export_as.addAction(self.menu_matrix.menuAction())

        self.menu_pattern.addAction(self.action_pattern_image_jpeg)
        self.menu_pattern.addAction(self.action_pattern_image_jpg)
        self.menu_pattern.addAction(self.action_pattern_wout_bg_png)
        self.menu_pattern.addAction(self.action_pattern_white_bg_png)
        self.menu_pattern.addAction(self.action_pattern_vector)
        self.menu_pattern.addAction(self.action_pattern_pdf)
        self.menu_export_as.addAction(self.menu_pattern.menuAction())

        self.menu_file.addAction(self.menu_export_as.menuAction())

        self.menu_help.addAction(self.action_help)
        self.menu_help.addSeparator()
        self.menu_help.addAction(self.action_about_pb)
        self.menu_help.addAction(self.action_about_author)
        self.menu_help.addSeparator()
        self.menu_help.addAction(self.action_join_us)

        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_help.menuAction())

        self.retranslate_ui(main_window)
        QtCore.QMetaObject.connectSlotsByName(main_window)

    def get_width(self):
        return self.width_spinBox.value()

    def get_height(self):
        return self.height_spinBox.value()

    def get_selected_color(self):
        return self.table_view_form.getById(int(self.colors_comboBox.currentText()))

    def colors_count(self):
        return self.table_view_form.get_row_count()

    def update_colors_select(self):
        items = self.table_view_form.get_all().copy()
        self.colors_comboBox.clear()
        model = self.colors_comboBox.model()
        for item in items:
            c_item = QStandardItem()
            c_item.setText(str(item['id']))
            c_item.setBackground(QColor(item['Hex']))
            model.appendRow(c_item)

    def switch_button_color(self):
        button = self.main_window.sender()
        params = self.get_selected_color()
        print(params)
        button.setText(str(params['id']))
        button.setStyleSheet("background-color : " + params['Hex'])

    def update_matrix_size(self):
        for row in range(self.get_height()):
            for column in range(self.get_width()):
                item = QPushButton()
                sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
                sizePolicy.setHeightForWidth(item.sizePolicy().hasHeightForWidth())
                item.setSizePolicy(sizePolicy)
                item.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
                item.setObjectName("button{}{}".format(row, column))
                item.setText("0")
                item.setStyleSheet("background-color : #FF0000")
                item.clicked.connect(self.switch_button_color)
                self.gridLayout.addWidget(item, row, column)

    def reset_matrix(self):
        self.width_spinBox.setProperty("value", 3)
        self.height_spinBox.setProperty("value", 3)
        for i in reversed(range(self.gridLayout.count())):
            self.gridLayout.itemAt(i).widget().setParent(None)
        self.update_matrix_size()

    def on_change_size(self):
        for i in reversed(range(self.gridLayout.count())):
            self.gridLayout.itemAt(i).widget().setParent(None)
        self.update_matrix_size()

    def redirect_to_github_repo(self):
        webbrowser.open('https://github.com/lyl-Lynx/Pattern-Builder')

    def retranslate_ui(self, main_window):
        _translate = QtCore.QCoreApplication.translate
        main_window.setWindowTitle(_translate("main_window", "Pattern Builder by lyl-Lynx"))
        self.toolBox_title.setText(_translate("main_window", "Tool box"))
        self.toolBox_sizes_title.setText(_translate("main_window", "Sizes"))
        self.width_label.setText(_translate("main_window", "Width"))
        self.height_label.setText(_translate("main_window", "Height"))
        self.toolBox_colors_title.setText(_translate("main_window", "Colors"))
        self.colors_table_button.setText(_translate("main_window", "Open colors table"))
        self.reset_button.setText(_translate("main_window", "Reset pattern"))
        self.export_button.setText(_translate("main_window", "Export"))
        self.menu_file.setTitle(_translate("main_window", "File"))
        self.menu_export_as.setTitle(_translate("main_window", "Export as..."))
        self.menu_matrix.setTitle(_translate("main_window", "Matrix"))
        self.menu_pattern.setTitle(_translate("main_window", "Pattern"))
        self.menu_help.setTitle(_translate("main_window", "Help"))
        self.action_matrix_text_file_txt.setText(_translate("main_window", "Text file (.txt)"))
        self.action_matrix_json.setText(_translate("main_window", "JSON (.json)"))
        self.action_matrix_tabler_csv.setText(_translate("main_window", "Tabler (.csv)"))
        self.action_matrix_tabler_xls.setText(_translate("main_window", "Tabler (.xls)"))
        self.action_matrix_tabler_xlsx.setText(_translate("main_window", "Tabler (.xlsx)"))
        self.action_matrix_image_jpeg.setText(_translate("main_window", "Image (.jpeg)"))
        self.action_matrix_image_jpg.setText(_translate("main_window", "Image (.jpg)"))
        self.action_matrix_image_wout_bg_png.setText(_translate("main_window", "Without background (.png)"))
        self.action_matrix_image_white_bg_png.setText(_translate("main_window", "With white background (.png)"))
        self.action_matrix_vector_svg.setText(_translate("main_window", "Vector (.svg)"))
        self.action_matrix_pdf.setText(_translate("main_window", "PDF (.pdf)"))
        self.action_pattern_image_jpeg.setText(_translate("main_window", "Image (.jpeg)"))
        self.action_pattern_image_jpg.setText(_translate("main_window", "Image (.jpg)"))
        self.action_pattern_wout_bg_png.setText(_translate("main_window", "Without background (.png)"))
        self.action_pattern_white_bg_png.setText(_translate("main_window", "With white background (.png)"))
        self.action_pattern_vector.setText(_translate("main_window", "Vector (.svg)"))
        self.action_pattern_pdf.setText(_translate("main_window", "PDF (.pdf)"))
        self.action_help.setText(_translate("main_window", "Pattern builder help"))
        self.action_about_pb.setText(_translate("main_window", "About Pattern builder"))
        self.action_about_author.setText(_translate("main_window", "About lyl-Lynx"))
        self.action_join_us.setText(_translate("main_window", "Join us on GitHub !"))


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    window = QtWidgets.QMainWindow()
    ui = UiMainWindow(window)
    window.show()
    sys.exit(app.exec_())
